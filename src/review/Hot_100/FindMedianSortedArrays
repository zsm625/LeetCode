class FindMedianSortedArrays {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        //傻瓜式遍历 ko O(m+n)
        int len1 = nums1.length;
        int len2 = nums2.length;
        double res = 0.0;
        if(len1==1&&len2==0){
            return nums1[0];
        }
        if(len2==1&&len1==0){
            return nums2[0];
        }
        int n=len1>len2?len1:len2;
        int[] nums = new int[len1+len2];
        int i=0;
        int l1=0;
        int l2=0;
        while(i<nums.length){
            if(l1<len1 && l2<len2){
                if(nums1[l1]<=nums2[l2]){
                     nums[i]=nums1[l1];
                     l1++;
                }else{
                    nums[i]=nums2[l2];
                    l2++;
                }
            }else if(l1==len1 && l2<len2){
                nums[i]=nums2[l2];
                l2++;
            }else if(l2==len2 && l1<len1){
                nums[i]=nums1[l1];
                l1++;
            }
            
            i++;
        }
        int num = (len1+len2)%2;
        if(num==0){
            int index = (len1+len2)/2;
            res = (double)(nums[index]+nums[index-1])/2;
        }else {
            int index = (len1+len2)/2;
            res = (double)nums[index];
        }
        return res;
    }
}
